<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:harp="clr-namespace:Bonsai.Harp;assembly=Bonsai.Harp"
                 xmlns:cf="clr-namespace:Bonsai.Harp.CF;assembly=Bonsai.Harp.CF"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:p1="clr-namespace:;assembly=Extensions"
                 xmlns:p2="clr-namespace:CricketVR;assembly=Extensions"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:dsp="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="GroupWorkflow">
        <Name>BehaviorBoard</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="harp:HarpMessage">
              <rx:Name>BehaviorCommands</rx:Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="PortName" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="harp:Device">
                <harp:DeviceState>Active</harp:DeviceState>
                <harp:DumpRegisters>true</harp:DumpRegisters>
                <harp:LedState>On</harp:LedState>
                <harp:VisualIndicators>On</harp:VisualIndicators>
                <harp:Heartbeat>Disable</harp:Heartbeat>
                <harp:IgnoreErrors>false</harp:IgnoreErrors>
                <harp:PortName>COM2</harp:PortName>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>BehaviorEvents</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Camera</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="CameraTriggerFrequency2" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>CameraController</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="CameraTriggerFrequency2" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>100</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:ReplaySubject">
                    <Name>CameraTriggerFrequency2</Name>
                    <rx:BufferSize xsi:nil="true" />
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>BehaviorEvents</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:FilterMessage">
                      <harp:Address>94</harp:Address>
                      <harp:MessageType>Event</harp:MessageType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>FrameEvents2</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>BehaviorEvents</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="cf:BehaviorCommand">
                    <cf:Type>StopCamera</cf:Type>
                    <cf:Mask>Digital1</cf:Mask>
                  </Expression>
                  <Expression xsi:type="rx:SelectMany">
                    <Name>SetFrameRate2</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CameraTriggerFrequency2</Name>
                        </Expression>
                        <Expression xsi:type="harp:Format">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Address>95</harp:Address>
                          <harp:PayloadType>U16</harp:PayloadType>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>StartStopCameras</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Object">
                          <rx:Name>StopCameras</rx:Name>
                        </Expression>
                        <Expression xsi:type="cf:BehaviorCommand">
                          <cf:Type>StopCamera</cf:Type>
                          <cf:Mask>Digital1</cf:Mask>
                        </Expression>
                        <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Object">
                          <rx:Name>StartCameras</rx:Name>
                        </Expression>
                        <Expression xsi:type="cf:BehaviorCommand">
                          <cf:Type>StartCamera</cf:Type>
                          <cf:Mask>Digital1</cf:Mask>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="4" Label="Source2" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>BehaviorCommands</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source2" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="9" To="12" Label="Source3" />
                  <Edge From="10" To="12" Label="Source2" />
                  <Edge From="11" To="12" Label="Source4" />
                  <Edge From="12" To="13" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="ExposureTime" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Spinnaker3</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>FrameEvents2</Name>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="SerialNumber" />
                    <Property Name="ExposureTime" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p1:CricketVRCapture">
                      <p1:Index xsi:nil="true" />
                      <p1:ColorProcessing>Default</p1:ColorProcessing>
                      <p1:HarpAddress>94</p1:HarpAddress>
                      <p1:ExposureTime>9000</p1:ExposureTime>
                      <p1:Gain>0</p1:Gain>
                      <p1:Binning>1</p1:Binning>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p2:ObserveOnTaskPool" />
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>Spinnaker3FrameEvents</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="1" To="2" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Spinnaker3FrameEvents</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="FrameRate" />
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="Extensions\LogVideo.bonsai">
              <Name>Spinnaker3</Name>
              <FrameRate>100</FrameRate>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timer">
                <rx:DueTime>PT2S</rx:DueTime>
                <rx:Period>PT0S</rx:Period>
              </Combinator>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>StartCameras</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="4" To="6" Label="Source1" />
            <Edge From="5" To="6" Label="Source2" />
            <Edge From="7" To="8" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Logging</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="LoggingRootPath" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>LogController</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="StringProperty">
                      <Value>C:\Users\Cricket Team\Desktop\data2\LightTracking</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:ReplaySubject">
                    <Name>SessionPath</Name>
                    <rx:BufferSize xsi:nil="true" />
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SessionPath</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Timestamp.DateTime</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p2:FormatDate" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Format">
                    <Format>{0}\{1}</Format>
                    <Selector>Item1,Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:AsyncSubject">
                    <Name>PathPrefix</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="4" To="7" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="8" Label="Source2" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="SubscribeSubject">
                <Name>Orientation</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="ExternalizedMapping">
                <Property Name="Name" />
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="IncludeWorkflow" Path="Extensions\FormatFileName.bonsai">
                <Extension>csv</Extension>
                <Name>Light_Orientation</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="PropertyMapping">
                <PropertyMappings>
                  <Property Name="FileName" />
                </PropertyMappings>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="io:CsvWriter">
                <io:FileName>C:\Users\Cricket Team\Desktop\data2\Light_Orientation.csv</io:FileName>
                <io:Append>false</io:Append>
                <io:Overwrite>false</io:Overwrite>
                <io:Suffix>None</io:Suffix>
                <io:IncludeHeader>true</io:IncludeHeader>
                <io:Selector>Item2,Item1</io:Selector>
              </Builder>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="2" To="6" Label="Source2" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Get Orientation</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Spinnaker3FrameEvents</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Value.Image</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:Crop">
                <cv:RegionOfInterest>
                  <cv:X>571</cv:X>
                  <cv:Y>355</cv:Y>
                  <cv:Width>261</cv:Width>
                  <cv:Height>252</cv:Height>
                </cv:RegionOfInterest>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ObserveOn">
                <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:WarpPerspective">
                <cv:Source>
                  <cv:Point2f>
                    <cv:X>133.65</cv:X>
                    <cv:Y>40.0583344</cv:Y>
                  </cv:Point2f>
                  <cv:Point2f>
                    <cv:X>94.1625</cv:X>
                    <cv:Y>262.991669</cv:Y>
                  </cv:Point2f>
                  <cv:Point2f>
                    <cv:X>397.9125</cv:X>
                    <cv:Y>280.408325</cv:Y>
                  </cv:Point2f>
                  <cv:Point2f>
                    <cv:X>364.5</cv:X>
                    <cv:Y>40.0583344</cv:Y>
                  </cv:Point2f>
                </cv:Source>
                <cv:Destination>
                  <cv:Point2f>
                    <cv:X>0</cv:X>
                    <cv:Y>0</cv:Y>
                  </cv:Point2f>
                  <cv:Point2f>
                    <cv:X>0</cv:X>
                    <cv:Y>594</cv:Y>
                  </cv:Point2f>
                  <cv:Point2f>
                    <cv:X>681</cv:X>
                    <cv:Y>594</cv:Y>
                  </cv:Point2f>
                  <cv:Point2f>
                    <cv:X>681</cv:X>
                    <cv:Y>0</cv:Y>
                  </cv:Point2f>
                </cv:Destination>
                <cv:Flags>Linear</cv:Flags>
                <cv:FillValue>
                  <cv:Val0>0</cv:Val0>
                  <cv:Val1>0</cv:Val1>
                  <cv:Val2>0</cv:Val2>
                  <cv:Val3>0</cv:Val3>
                </cv:FillValue>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dsp:Split" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item1</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:Threshold">
                <cv:ThresholdValue>203</cv:ThresholdValue>
                <cv:MaxValue>255</cv:MaxValue>
                <cv:ThresholdType>Binary</cv:ThresholdType>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:FindContours">
                <cv:Mode>External</cv:Mode>
                <cv:Method>ChainApproxNone</cv:Method>
                <cv:Offset>
                  <cv:X>0</cv:X>
                  <cv:Y>0</cv:Y>
                </cv:Offset>
                <cv:MinArea>590</cv:MinArea>
                <cv:MaxArea xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:LargestBinaryRegion" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Centroid</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:Threshold">
                <cv:ThresholdValue>254</cv:ThresholdValue>
                <cv:MaxValue>255</cv:MaxValue>
                <cv:ThresholdType>Binary</cv:ThresholdType>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:FindContours">
                <cv:Mode>External</cv:Mode>
                <cv:Method>ChainApproxNone</cv:Method>
                <cv:Offset>
                  <cv:X>0</cv:X>
                  <cv:Y>0</cv:Y>
                </cv:Offset>
                <cv:MinArea>300</cv:MinArea>
                <cv:MaxArea xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:LargestBinaryRegion" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Centroid</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item3</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:Threshold">
                <cv:ThresholdValue>254</cv:ThresholdValue>
                <cv:MaxValue>255</cv:MaxValue>
                <cv:ThresholdType>Binary</cv:ThresholdType>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:FindContours">
                <cv:Mode>External</cv:Mode>
                <cv:Method>ChainApproxNone</cv:Method>
                <cv:Offset>
                  <cv:X>0</cv:X>
                  <cv:Y>0</cv:Y>
                </cv:Offset>
                <cv:MinArea>150</cv:MinArea>
                <cv:MaxArea xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:LargestBinaryRegion" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Centroid</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Seconds</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:CombineLatest" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Skip">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>CurrCoords</Name>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>CreateArray</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:AsyncSubject">
                    <Name>Value</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Value</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Value</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Value</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ToArray" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="9" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="9" Label="Source2" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source3" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:MinimumEnclosingCircle" />
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" />
            <Expression xsi:type="MemberSelector">
              <Selector>Center</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Skip">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:ReplaySubject">
              <Name>centre</Name>
              <rx:BufferSize xsi:nil="true" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:ReplaySubject">
              <Name>OriginCoord</Name>
              <rx:BufferSize xsi:nil="true" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:BufferTime">
                <rx:TimeSpan>PT1S</rx:TimeSpan>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Count</Selector>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>OriginCoord</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>centre</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>CurrCoords</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="ipy:PythonTransform">
              <ipy:Script>from math import atan2, degrees, isnan, pi
from System import Tuple

@returns(Tuple[Tuple[float, float, float],float])
def process(value):
    # Original fixed xy coordinates of each point
    original_points = [(value.Item2.Item1.Item1.X, value.Item2.Item1.Item1.Y), 
                       (value.Item2.Item1.Item2.X, value.Item2.Item1.Item2.Y), 
                       (value.Item2.Item1.Item3.X, value.Item2.Item1.Item3.Y)]

    # Current xy coordinates of each point
    current_points = [(value.Item1.Item1.X, value.Item1.Item1.Y),
                      (value.Item1.Item2.X, value.Item1.Item2.Y),
                      (value.Item1.Item3.X, value.Item1.Item3.Y)]

    # Center of the circle
    centreX, centreY = (value.Item2.Item2.X, value.Item2.Item2.Y)

    # Initialize a list to store the angles for each point
    angles = []

    # Calculate angle for each point
    for i, (x, y) in enumerate(current_points):
        # Check if any of the input values are NaN
        if isnan(x) or isnan(y):
            angles.append(float('nan'))  # Append NaN if any input value is NaN
            continue

        # Calculate displacement vector from center to current point
        dx = x - centreX
        dy = y - centreY

        # Calculate displacement vector from center to original point
        orig_x, orig_y = original_points[i]
        orig_dx = orig_x - centreX
        orig_dy = orig_y - centreY

        # Calculate the angle in radians (clockwise)
        angle = atan2(dy, dx) - atan2(orig_dy, orig_dx)

        # Convert angle from radians to degrees
        #angle_degrees = degrees(angle)

        # Ensure angle is between 0 and 360 degrees
        #if angle_degrees &lt; 0:
            #angle_degrees += 360

        #angles.append(angle_degrees)

        # Ensure angle is between 0 and 2*pi radians (360 degrees) degrees
        if angle &lt; 0:
            angle += 2 * pi 
    
        angles.append(angle)

    # Return the angles for each point as a tuple
    return Tuple.Create(Tuple.Create(angles[0], angles[1], angles[2]), value.Item1.Item4)

</ipy:Script>
            </Expression>
            <Expression xsi:type="ipy:PythonTransform">
              <ipy:Script>from math import isnan
from System import Tuple

@returns(Tuple[float, float])
def process(value):

    # Angles of movement
    LED_angles = [value.Item1.Item1, value.Item1.Item2, value.Item1.Item3]

    # Filter out NaN values from LED_angles
    valid_angles = [angle for angle in LED_angles if not isnan(angle)]

    # Filter out large discrepencies (stop avergerging of single angle outlier errors)
    consistant_angles = []

    for angle in valid_angles:
        # Check to see if angle is within +-5 of at least one of the other angles
        if any(abs(angle - other_angle) &lt;= 5 for other_angle in valid_angles if other_angle != angle):
            consistant_angles.append(angle)

    # Calculate the average of valid angles
    if consistant_angles:
        AvgAngle = sum(consistant_angles) / len(consistant_angles)
    else:
        AvgAngle = float('nan')

    # Return the average angle as a tuple
    return Tuple.Create(AvgAngle, value.Item2)

</ipy:Script>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item1</Selector>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>OrientationVal</Name>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>Orientation</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="0" To="24" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="4" To="26" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="5" To="12" Label="Source1" />
            <Edge From="5" To="18" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="25" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="17" To="25" Label="Source2" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="20" To="21" Label="Source1" />
            <Edge From="21" To="22" Label="Source1" />
            <Edge From="22" To="23" Label="Source1" />
            <Edge From="23" To="25" Label="Source3" />
            <Edge From="24" To="25" Label="Source4" />
            <Edge From="25" To="26" Label="Source2" />
            <Edge From="26" To="27" Label="Source1" />
            <Edge From="27" To="28" Label="Source1" />
            <Edge From="27" To="37" Label="Source1" />
            <Edge From="27" To="39" Label="Source1" />
            <Edge From="28" To="29" Label="Source1" />
            <Edge From="29" To="30" Label="Source1" />
            <Edge From="30" To="31" Label="Source1" />
            <Edge From="31" To="32" Label="Source1" />
            <Edge From="32" To="33" Label="Source1" />
            <Edge From="33" To="34" Label="Source1" />
            <Edge From="33" To="35" Label="Source1" />
            <Edge From="35" To="36" Label="Source1" />
            <Edge From="37" To="38" Label="Source1" />
            <Edge From="39" To="40" Label="Source1" />
            <Edge From="41" To="43" Label="Source1" />
            <Edge From="42" To="43" Label="Source2" />
            <Edge From="43" To="45" Label="Source2" />
            <Edge From="44" To="45" Label="Source1" />
            <Edge From="45" To="46" Label="Source1" />
            <Edge From="46" To="47" Label="Source1" />
            <Edge From="47" To="48" Label="Source1" />
            <Edge From="47" To="50" Label="Source1" />
            <Edge From="48" To="49" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges />
  </Workflow>
</WorkflowBuilder>