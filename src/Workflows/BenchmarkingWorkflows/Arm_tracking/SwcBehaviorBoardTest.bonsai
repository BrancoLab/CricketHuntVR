<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.6.3"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:harp="clr-namespace:Bonsai.Harp;assembly=Bonsai.Harp"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:p1="clr-namespace:Bonsai.Harp.CF;assembly=Bonsai.Harp.CF"
                 xmlns:scr="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="PublishSubject" TypeArguments="harp:HarpMessage">
        <Name>ArmCommands</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="harp:Device">
          <harp:DeviceState>Active</harp:DeviceState>
          <harp:DumpRegisters>true</harp:DumpRegisters>
          <harp:LedState>On</harp:LedState>
          <harp:VisualIndicators>On</harp:VisualIndicators>
          <harp:Heartbeat>Disable</harp:Heartbeat>
          <harp:IgnoreErrors>true</harp:IgnoreErrors>
          <harp:PortName>COM5</harp:PortName>
        </Combinator>
      </Expression>
      <Expression xsi:type="PublishSubject">
        <Name>ArmEvents</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>ArmEvents</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="harp:FilterMessage">
          <harp:Address>49</harp:Address>
          <harp:MessageType>Event</harp:MessageType>
        </Combinator>
      </Expression>
      <Expression xsi:type="harp:Parse">
        <harp:Type>TimestampedU8</harp:Type>
        <harp:IsArray>false</harp:IsArray>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Seconds</Selector>
      </Expression>
      <Expression xsi:type="BehaviorSubject" TypeArguments="harp:HarpMessage">
        <Name>BehaviorCommands</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="harp:Device">
          <harp:DeviceState>Active</harp:DeviceState>
          <harp:DumpRegisters>true</harp:DumpRegisters>
          <harp:LedState>On</harp:LedState>
          <harp:VisualIndicators>On</harp:VisualIndicators>
          <harp:Heartbeat>Enable</harp:Heartbeat>
          <harp:IgnoreErrors>false</harp:IgnoreErrors>
          <harp:PortName>COM6</harp:PortName>
        </Combinator>
      </Expression>
      <Expression xsi:type="Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Address</Selector>
            </Expression>
            <Expression xsi:type="NotEqual">
              <Operand xsi:type="IntProperty">
                <Value>44</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="PublishSubject">
        <Name>BehaviorEvents</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="harp:FilterMessage">
          <harp:Address>35</harp:Address>
          <harp:MessageType>Write</harp:MessageType>
        </Combinator>
      </Expression>
      <Expression xsi:type="harp:Parse">
        <harp:Type>TimestampedU16</harp:Type>
        <harp:IsArray>false</harp:IsArray>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Seconds</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="Subtract" />
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Timer">
            <rx:DueTime>PT1S</rx:DueTime>
            <rx:Period>PT0.1S</rx:Period>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Sink">
          <Name>PulseOn</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="WorkflowInput">
                <Name>Source1</Name>
              </Expression>
              <Expression xsi:type="p1:BehaviorCommand">
                <p1:Type>SetOutput</p1:Type>
                <p1:Mask>Port0</p1:Mask>
              </Expression>
              <Expression xsi:type="MulticastSubject">
                <Name>BehaviorCommands</Name>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="IntProperty">
            <Value>1</Value>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="scr:PythonTransform">
          <scr:Script>import clr
clr.AddReference("Bonsai.Harp")
from Bonsai.Harp import *

@returns(HarpMessage)
def process(value):
  return HarpMessage.FromSingle(48, MessageType.Write, value)</scr:Script>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="MulticastSubject">
          <Name>ArmCommands</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Delay">
            <rx:DueTime>PT0.01S</rx:DueTime>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Sink">
          <Name>PulseOff</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="WorkflowInput">
                <Name>Source1</Name>
              </Expression>
              <Expression xsi:type="p1:BehaviorCommand">
                <p1:Type>ClearOutput</p1:Type>
                <p1:Mask>Port0</p1:Mask>
              </Expression>
              <Expression xsi:type="MulticastSubject">
                <Name>BehaviorCommands</Name>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="IntProperty">
            <Value>0</Value>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="scr:PythonTransform">
          <scr:Script>import clr
clr.AddReference("Bonsai.Harp")
from Bonsai.Harp import *

@returns(HarpMessage)
def process(value):
  return HarpMessage.FromSingle(48, MessageType.Write, value)</scr:Script>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="MulticastSubject">
          <Name>ArmCommands</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>BehaviorEvents</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="p1:BehaviorEvent">
          <p1:Type>RegisterCamera</p1:Type>
          <p1:Mask>Digital0</p1:Mask>
        </Builder>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT0S</rx:DueTime>
          <rx:Period>PT0S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="p1:BehaviorCommand">
        <p1:Type>StopPwm</p1:Type>
        <p1:Mask>Digital0</p1:Mask>
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>BehaviorCommands</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>BehaviorEvents</Name>
      </Expression>
      <Expression xsi:type="p1:BehaviorEvent">
        <p1:Type>Input</p1:Type>
        <p1:Mask>Port0</p1:Mask>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT1S</rx:DueTime>
          <rx:Period>PT5S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="Sink">
        <Name>PulseOn</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="p1:BehaviorCommand">
              <p1:Type>SetOutput</p1:Type>
              <p1:Mask>Port0</p1:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="IntProperty">
          <Value>1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="scr:PythonTransform">
        <scr:Script>import clr
clr.AddReference("Bonsai.Harp")
from Bonsai.Harp import *

@returns(HarpMessage)
def process(value):
  return HarpMessage.FromByte(48, MessageType.Write, value)</scr:Script>
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>ArmCommands</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT1S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Sink">
        <Name>PulseOff</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="p1:BehaviorCommand">
              <p1:Type>ClearOutput</p1:Type>
              <p1:Mask>Port0</p1:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="IntProperty">
          <Value>0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="scr:PythonTransform">
        <scr:Script>import clr
clr.AddReference("Bonsai.Harp")
from Bonsai.Harp import *

@returns(HarpMessage)
def process(value):
  return HarpMessage.FromByte(48, MessageType.Write, value)</scr:Script>
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>ArmCommands</Name>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="scr:PythonTransform">
          <scr:Script>import clr
clr.AddReference("Bonsai.Harp")
from Bonsai.Harp import *

@returns(HarpMessage)
def process(value):
  HarpMessage.FromByte(48, MessageType.Write, value)</scr:Script>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="MulticastSubject">
          <Name>ArmCommands</Name>
        </Builder>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="14" Label="Source2" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="8" To="11" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="17" To="18" Label="Source1" />
      <Edge From="18" To="19" Label="Source1" />
      <Edge From="19" To="20" Label="Source1" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="21" To="22" Label="Source1" />
      <Edge From="22" To="23" Label="Source1" />
      <Edge From="23" To="24" Label="Source1" />
      <Edge From="24" To="25" Label="Source1" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="28" To="29" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="31" To="32" Label="Source1" />
      <Edge From="33" To="34" Label="Source1" />
      <Edge From="34" To="35" Label="Source1" />
      <Edge From="35" To="36" Label="Source1" />
      <Edge From="36" To="37" Label="Source1" />
      <Edge From="37" To="38" Label="Source1" />
      <Edge From="38" To="39" Label="Source1" />
      <Edge From="39" To="40" Label="Source1" />
      <Edge From="40" To="41" Label="Source1" />
      <Edge From="41" To="42" Label="Source1" />
      <Edge From="42" To="43" Label="Source1" />
      <Edge From="43" To="44" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>